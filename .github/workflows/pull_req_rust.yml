name: Tests

on:
  pull_request:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
jobs:
  check_formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt --all -- --check
  check_clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check clippy
        run: cargo clippy --all-targets --all-features -- -D warnings
  run_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix: {os: [ubuntu-latest, macos-latest, windows-latest] }
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: cargo test --all-targets --all-features
  post_locktrace_markdown:
    runs-on: ubuntu-latest
    env:
      PGPASS: postgres
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
    steps:
      - uses: actions/checkout@v4
      - name: Install eugene
        run: cargo install --path .
      - name: Run eugene to create books
        run: eugene trace -d postgres -c examples/create_books.sql
      - name: Run eugene to generate example report
        run: eugene trace -e -d postgres -f markdown examples/add_authors.sql > report.md
      - name: Post report as comment to pull request
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.SUBMIT_COMMENT_TOKEN }}
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('report.md', 'utf8');
            github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: report
            });
